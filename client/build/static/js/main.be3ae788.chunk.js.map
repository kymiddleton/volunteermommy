{"version":3,"sources":["assets/blacklogo.png","Utils/Auth.js","components/Routes.js","components/Header/Header.js","components/Header/DropDownHeader.js","Pages/HomePage.js","Utils/APIs.js","components/LoginForm.js","Pages/LoginPage.js","Pages/LogoutFunction.js","components/SignUpForm.js","Pages/SignUpPage.js","components/Dashboard.js","Pages/DashboardPage.js","components/Input.js","components/Select.js","components/Button.js","containers/AdultContainer.js","components/SelectTeacher.js","containers/ChildContainer.js","Pages/MyAccount/MyDetails.js","Pages/MyAccount/MyEvents.js","components/Tabs.js","Pages/MyAccount/MyAccount.js","Pages/Events/NewEvent.js","Pages/Events/Events.js","Pages/Volunteers.js","Pages/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Auth","token","localStorage","setItem","getItem","removeItem","PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","isUserAuthenticated","Redirect","to","pathname","state","from","location","LoggedOutRoute","_ref2","PropsRoute","_ref3","Header","className","src","logo","alt","DropDownHeader","authenticated","toggleAuthenticateStatus","_this","setState","this","Menu","inverted","Dropdown","text","pointing","Item","as","Link","position","React","HomePage","Card","color","Content","Meta","style","fontSize","APIs","login","userData","axios","post","signUp","dashboard","get","headers","Authorization","concat","adult","adultData","user","LoginForm","onSubmit","onChange","errors","successMessage","material_ui_Card","action","summary","TextField_default","floatingLabelText","name","errorText","email","value","type","password","RaisedButton_default","label","primary","LoginPage","processForm","event","preventDefault","_this$state$user","API","then","res","authenticateUser","data","console","log","id","history","push","catch","message","changeUser","field","target","storedMessage","components_LoginForm","contextTypes","router","PropTypes","object","isRequired","LogoutFunction","deauthenticateUser","SignUpForm","SignUpPage","response","components_SignUpForm","Dashboard","secretData","Description","DashboardPage","_this2","getToken","components_Dashboard","Input","htmlFor","newAdult","title","input","handleChange","placeholder","Select","disabled","options","map","option","key","Button","onClick","e","AdultContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","firstName","lastName","phoneNumber","relationship","relationshipOptions","handleFirstName","bind","assertThisInitialized","handleLastName","handleEmail","handlePhoneNumber","handleFormSubmit","handleClearForm","handleInput","prevState","objectSpread","child","defineProperty","self","toggleChild","_id","Form","Group","inline","components_Input","firstname","components_Select","children","components_Button","buttonStyle","margin","SelectTeacher","handleClick","fullName","ChildContainer","newChild","teacher","parent","adultId","parentOptions","newTeacher","grade","teacherOptions","handleTeacherInput","_this3","childData","$","_this4","components_SelectTeacher","MyDetails","getUser","json","isLoggedIn","_this$state","containers_AdultContainer","src_containers_ChildContainer","MyEvents","widths","Field","control","Tabs","Tab","panes","tabList","el","menuItem","tabName","Pane","defaultActiveIndex","MyAccount","components_Tabs","NewEvent","Events","Volunteers","showChild","Search","query","handleInputchange","search","getInfo","results","ref","handleInputChange","App","MuiThemeProvider_default","muiTheme","getMuiTheme","BrowserRouter","components_Header_Header","Header_DropDownHeader","Routes_PropsRoute","exact","path","Routes_PrivateRoute","Routes_LoggedOutRoute","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be3ae788.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blacklogo.3740a154.png\";","class Auth {\n\n    /**\n     * Authenticate a user. Save a token string in Local Storage\n     *\n     * @param {string} token\n     */\n    static authenticateUser(token) {\n        localStorage.setItem('token', token);\n    }\n\n    /**\n     * Check if a user is authenticated - check if a token is saved in Local Storage\n     *\n     * @returns {boolean}\n     */\n    static isUserAuthenticated() {\n        return localStorage.getItem('token') !== null;\n    }\n\n    /**\n     * Deauthenticate a user. Remove a token from Local Storage.\n     *\n     */\n    static deauthenticateUser() {\n        localStorage.removeItem('token');\n    }\n\n    /**\n     * Get a token value.\n     *\n     * @returns {string}\n     */\n\n    static getToken() {\n        return localStorage.getItem('token');\n    }\n\n}\n\nexport default Auth;  ","import React from \"react\";\n\nimport Auth from '../Utils/Auth';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    Auth.isUserAuthenticated() ? (\n      <Component {...props} {...rest} />\n    ) : (\n      <Redirect to={{\n        pathname: '/',\n        state: { from: props.location }\n      }}/>\n    )\n  )}/>\n)\n\nconst LoggedOutRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    Auth.isUserAuthenticated() ? (\n      <Redirect to={{\n        pathname: '/',\n        state: { from: props.location }\n      }}/>\n    ) : (\n      <Component {...props} {...rest} />\n    )\n  )}/>\n)\n\nconst PropsRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    <Component {...props} {...rest} />\n  )}/>\n)\n\nexport { PrivateRoute, LoggedOutRoute, PropsRoute };","import React, { Component } from 'react';\n// import Auth from '../../Utils/Auth';\n// import logo from '../../assets/whitelogo.png';\nimport logo from '../../assets/blacklogo.png';\n// import { Link } from 'react-router-dom';\nimport '../../css/header.css';\n\n\nclass Header extends Component {\n\n  // state = {\n  //   authenticated: false\n  // }\n\n  // componentDidMount() {\n  //   // check if user is logged in on refresh\n  //   this.toggleAuthenticateStatus()\n  // }\n\n  // toggleAuthenticateStatus = () => {\n  //   // check authenticated status and toggle state based on that\n  //   this.setState({ authenticated: Auth.isUserAuthenticated() })\n  // }\n\n  render() {\n    return (\n      <div className=\"logoheader\">\n        {/* <img src={logo} alt=\"whitelogo\" className=\"logo\"></img> */}\n        <img src={logo} alt=\"blacklogo\" className=\"logo\"></img>\n\n        <nav>\n          {/* <li>\n            <Link to=\"/login\">Log In</Link>\n          </li>\n          <li>\n            <Link to=\"/signup\">Sign Up</Link>\n          </li>\n          <li>\n            <Link to=\"/myaccount/\">My Account</Link>\n          </li>\n          <li>\n            <Link to=\"/events/\">Events</Link>\n          </li>\n          <li>\n            <Link to=\"/home/\">Home</Link>\n          </li> */}\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Dropdown, Menu } from 'semantic-ui-react';\nimport Auth from '../../Utils/Auth';\n\nclass DropDownHeader extends React.Component {\n\n    state = {\n        authenticated: false\n    }\n\n    componentDidMount() {\n    // check if user is logged in on refresh\n    this.toggleAuthenticateStatus()\n    }\n\n    toggleAuthenticateStatus = () => {\n    // check authenticated status and toggle state based on that\n    this.setState({ authenticated: Auth.isUserAuthenticated() })\n    }\n\n    // {this.state.authenticated ? ('') : ('') }\n\n    render() {\n        return (\n            <div>\n                <Menu inverted>\n                    <Dropdown text='Dashboard' pointing className='link item'>\n                        <Dropdown.Menu>\n                            <Dropdown.Header>Dashboard Details</Dropdown.Header>\n                            <Dropdown.Item as={ Link } to='/myaccount'>My Account</Dropdown.Item>\n                            <Dropdown.Item as={ Link } to='/volunteers'>Volunteers</Dropdown.Item>\n                            <Dropdown.Item as={ Link } to='/events'>Events</Dropdown.Item>\n                            <Dropdown.Item as={ Link } to='/search'>Search</Dropdown.Item>\n                            {/* <Dropdown.Item as={ Link } to='/logout'>Logout</Dropdown.Item> */}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Menu.Item as={ Link } to='/logout'>Logout</Menu.Item>\n                    <Menu.Item position=\"right\" as={ Link } to='/login'>Login</Menu.Item>\n                    <Menu.Item as={ Link } to='/signup'>SignUp</Menu.Item>\n                </Menu>\n            </div>\n        );\n    }\n}\n\nexport default DropDownHeader;","import React from 'react';\nimport Auth from '../Utils/Auth';\nimport { Card } from 'semantic-ui-react';\nimport '../css/homepage.css';\n\nclass HomePage extends React.Component {\n\n    componentDidMount() {\n        // update authenticated state on logout\n        this.toggleAuthenticateStatus()\n    }\n\n    toggleAuthenticateStatus = () => {\n        // check authenticated status and toggle state based on that\n        this.setState({ authenticated: Auth.isUserAuthenticated() })\n    }\n\n    render() {\n        return (\n            <Card color='blue' className=\"ui centered card\" >\n                <Card.Content>\n                    <Card.Header>Volunteer Mommy</Card.Header>\n                    {Auth.isUserAuthenticated() ? (\n                        <Card.Meta style={{ fontSize: '16px', color: 'green' }}>Welcome! You are logged in.</Card.Meta>\n                    ) : (\n                            <Card.Meta style={{ fontSize: '16px', color: 'red' }}>You are not logged in.</Card.Meta>\n                        )}\n                </Card.Content>\n            </Card >\n        )\n    }\n};\n\nexport default HomePage;","import axios from \"axios\";\n\n//methods for interacting with API Auth routes\nexport default {\n   login: userData =>\n      axios.post(\"/auth/login\", userData),\n   signUp: userData =>\n      axios.post('/auth/signup', userData),\n   dashboard: token =>\n      axios.get('/api/dashboard', { headers: { Authorization: `bearer ${token}` } }),\n   adult: (token, adultData) =>\n      axios.post('/api/adult', adultData, { headers: { Authorization: `bearer ${token}` } }),\n   user: (token, userData) =>\n      axios.get('/api/user', userData, { headers: { Authorization: `bearer ${token}` } }),\n   // teacher: token =>\n   //    axios.get('/api/teacher', { headers: { Authorization: `bearer ${token}` } })\n\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { Card, CardText } from 'material-ui/Card';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport '../css/loginform.css';\n\nconst LoginForm = ({\n    onSubmit,\n    onChange,\n    errors,\n    successMessage,\n    user,\n    toggleAuthenticateStatus\n}) => (\n    <Card className=\"login-container\">\n        <form action=\"/\" onSubmit={onSubmit}>\n            <h2 className=\"card-heading\">Login</h2>\n\n            {successMessage && <p className=\"success-message\">{successMessage}</p>}\n            {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n            <div className=\"field-line-email\">\n                <TextField\n                    floatingLabelText=\"Enter Email\"\n                    name=\"email\"\n                    errorText={errors.email}\n                    onChange={onChange}\n                    value={user.email}\n                />\n            </div>\n\n            <div className=\"field-line-password\">\n                <TextField\n                    floatingLabelText=\"Enter Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={onChange}\n                    errorText={errors.password}\n                    value={user.password}\n                />\n            </div>\n\n            <div className=\"button-line\">\n                <RaisedButton type=\"submit\" label=\"Log in\" primary />\n            </div>\n\n            <CardText>Don't have an account? <Link to={'/signup'}>Create one</Link>.</CardText>\n        </form>\n    </Card>\n);\n\nLoginForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    successMessage: PropTypes.string.isRequired,\n    user: PropTypes.object.isRequired\n};\n\nexport default LoginForm;\n\n\n\n// import React from 'react';\n// // import PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom';\n// import { Button, Form, Grid, Header, Image, Message, Segment, Input} from 'semantic-ui-react'\n// import logo from '../assets/BlackIcon.png';\n// // import { Card, CardText } from 'material-ui/Card';\n// // import RaisedButton from 'material-ui/RaisedButton';\n// // import TextField from 'material-ui/TextField';\n// import '../css/loginform.css';\n\n// class LoginForm extends React.Component {\n\n//     onSubmit = (e) => {\n//         this.props.Submit()\n//     }\n\n//     onChange = (e) => {\n//         this.props.onChange()\n//     }\n\n//     errors = (e) => {\n//         this.props.errorMessage()\n//     }\n\n//     successMessage = (e) => {\n//         this.props.success()\n//     }\n\n//     user = (e) => {\n//         this.props.user()\n//     }\n\n//     toggleAuthenticateStatus = (e) => {\n//         this.props.toggle()\n//     }\n\n//     render() {\n//         const { values} = this.props;\n//         return (\n//             <div className='login-form'>\n//                 {/*\n//                 Heads up! The styles below are necessary for the correct render of this example.\n//                 You can do same with CSS, the main idea is that all the elements up to the `Grid`\n//                 below must have a height of 100%.\n//                 */}\n//                 <style>{`body > div, body > div > div, body > div > div > div.login-form { height: 100%; }`}</style>\n                \n//                 <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n//                     <Grid.Column style={{ maxWidth: 450 }}>\n//                         <Header as='h2' color='blue' textAlign='center'>\n//                             <Image src={logo} alt='BlackIcon' className=\"logo\"/> Log-in to your account\n//                         </Header>\n//                         <Form size='large' action=\"/\" onSubmit={this.onSubmit}>\n\n//                             {this.successMessage && <p className=\"success-message\">{this.successMessage}</p>}\n//                             {this.errors.summary && <p className=\"error-message\">{this.errors.summary}</p>}\n\n//                             <Segment stacked color='blue'>\n//                                 <Input \n//                                 fluid icon='user' \n//                                 iconPosition='left' \n//                                 placeholder='E-mail address'\n//                                 type='email'\n//                                 errors={this.errorMessage}\n//                                 onChange={this.onChange}\n//                                 defaultValue={values.email}\n//                                 />\n//                                 <Input\n//                                 fluid icon='lock'\n//                                 iconPosition='left'\n//                                 placeholder='Password'\n//                                 type='password'\n//                                 onChange={this.onChange}\n//                                 errors={this.errorMessage}\n//                                 defaultValue={values.password}\n//                                 />\n                    \n//                                 <Button \n//                                 color='blue'\n//                                 fluid size='large'\n//                                 type='submit'>\n//                                 Login\n//                                 </Button>\n//                             </Segment>\n//                         </Form>\n\n//                         <Message>\n//                             New to us?  <Link to={'/signup'}>Create Account</Link>\n//                         </Message>\n//                     </Grid.Column>\n//                 </Grid>\n//             </div>\n//         )\n//     }\n// }\n\n// export default LoginForm;\n\n\n\n// const LoginForm = ({\n//     onSubmit,\n//     onChange,\n//     errors,\n//     successMessage,\n//     user,\n//     toggleAuthenticateStatus\n// }) => (\n    \n//     <div className='login-form'>\n//         {/*\n//         Heads up! The styles below are necessary for the correct render of this example.\n//         You can do same with CSS, the main idea is that all the elements up to the `Grid`\n//         below must have a height of 100%.\n//         */}\n//         <style>{`body > div, body > div > div, body > div > div > div.login-form { height: 100%; }`}</style>\n        \n//         <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n//             <Grid.Column style={{ maxWidth: 450 }}>\n//                 <Header as='h2' color='blue' textAlign='center'>\n//                     <Image src={logo} alt='BlackIcon' className=\"logo\"/> Log-in to your account\n//                 </Header>\n//                 <Form size='large' action=\"/\" onSubmit={onSubmit}>\n\n//                     {successMessage && <p className=\"success-message\">{successMessage}</p>}\n//                     {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n//                     <Segment stacked color='blue'>\n//                         <Input \n//                         fluid icon='user' \n//                         iconPosition='left' \n//                         placeholder='E-mail address'\n//                         type='email'\n//                         errors={errors.email}\n//                         onChange={onChange}\n//                         value={user.email}\n//                         />\n//                         <Input\n//                         fluid icon='lock'\n//                         iconPosition='left'\n//                         placeholder='Password'\n//                         type='password'\n//                         onChange={onChange}\n//                         errors={errors.password}\n//                         value={user.password}\n//                         />\n            \n//                         <Button \n//                         color='blue'\n//                         fluid size='large'\n//                         type='submit'>\n//                         Login\n//                         </Button>\n//                     </Segment>\n//                 </Form>\n\n//                 <Message>\n//                     New to us?  <Link to={'/signup'}>Create Account</Link>\n//                 </Message>\n//             </Grid.Column>\n//         </Grid>\n//     </div>\n// );\n    \n// LoginForm.propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n//     onChange: PropTypes.func.isRequired,\n//     errors: PropTypes.object.isRequired,\n//     successMessage: PropTypes.string.isRequired,\n//     user: PropTypes.object.isRequired\n// };\n\n// export default LoginForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport API from '../Utils/APIs';\nimport Auth from '../Utils/Auth';\n\n/*== COMPONENTS ==*/\nimport LoginForm from '../components/LoginForm.js';\n\n\nclass LoginPage extends React.Component {\n    // set the initial component state\n    state = {\n        errors: {},\n        successMessage: '',\n        user: {\n            email: '',\n            password: ''\n        }\n    }\n\n    componentDidMount() {\n        const storedMessage = localStorage.getItem('successMessage');\n        let successMessage = '';\n\n        if (storedMessage) {\n            successMessage = storedMessage;\n            localStorage.removeItem('successMessage');\n        }\n        this.setState({ successMessage });\n    }\n\n    componentWillUnmount() {\n        this.setState({\n            errors: {}\n        });\n    }\n    /**\n     * Process the form.\n     *\n     * @param {object} event - the JavaScript event object\n     */\n    processForm = event => {\n        // prevent default action. in this case, action is the form submission event\n        event.preventDefault();\n\n        // create a string for an HTTP body message\n        const { email, password } = this.state.user;\n\n        API.login({ email, password }).then(res => {\n            // save the token\n            Auth.authenticateUser(res.data.token);\n            console.log(res, \"the is reponse object from api\")\n            localStorage.setItem(\"userId\", res.data.user.id);\n            // update authenticated state\n            this.props.toggleAuthenticateStatus()\n\n            // redirect signed in user to dashboard\n            this.props.history.push('/dashboard');\n\n        }).catch(( { res }) => {\n            // console.log(\"Response: \"+res.data)\n            const errors = res.data.errors ? res.data.errors : {};\n            // console.log(response);\n            errors.summary = res.data.message;\n\n            this.setState({\n                errors\n            });\n        });\n    }\n\n    /**\n     * Change the user object.\n     *\n     * @param {object} event - the JavaScript event object\n     */\n    changeUser = event => {\n        const field = event.target.name;\n        const user = this.state.user;\n        user[field] = event.target.value;\n\n        this.setState({\n            user\n        });\n    }\n\n    /**\n     * Render the component.\n     */\n    render() {\n        return (\n            <LoginForm\n                onSubmit={this.processForm}\n                onChange={this.changeUser}\n                errors={this.state.errors}\n                successMessage={this.state.successMessage}\n                user={this.state.user}\n            />\n        );\n    }\n\n}\n\nLoginPage.contextTypes = {\n    router: PropTypes.object.isRequired\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Auth from '../Utils/Auth';\n\n\nclass LogoutFunction extends React.Component {\n\n  componentDidMount() {\n    // deauthenticate user\n    Auth.deauthenticateUser();\n    // change the current URL to / after logout\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Logging out...</p>\n      </div>\n    )\n  }\n}\n\nLogoutFunction.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default LogoutFunction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { Card, CardText } from 'material-ui/Card';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport '../css/signupform.css';\n\n// import { Input } from 'semantic-ui-react'\n// import { Card, Message } from 'semantic-ui-react'\n// import { Button } from 'semantic-ui-react'\n\n\nconst SignUpForm = ({\n    onSubmit,\n    onChange,\n    errors,\n    user,\n}) => (\n        <Card className=\"signup-container\">\n            <form action=\"/\" onSubmit={onSubmit}>\n                <h2>Sign Up</h2>\n\n                {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n                <div className=\"field-line\">\n                    <TextField className=\"text\"\n                        floatingLabelText=\"Name\"\n                        name=\"name\"\n                        errorText={errors.name}\n                        onChange={onChange}\n                        value={user.name}\n                    />\n                </div>\n\n                <div className=\"field-line\">\n                    <TextField\n                        floatingLabelText=\"Email\"\n                        name=\"email\"\n                        errorText={errors.email}\n                        onChange={onChange}\n                        value={user.email}\n                    />\n                </div>\n\n                <div className=\"field-line\">\n                    <TextField\n                        floatingLabelText=\"Password\"\n                        type=\"password\"\n                        name=\"password\"\n                        onChange={onChange}\n                        errorText={errors.password}\n                        value={user.password}\n                    />\n                </div>\n\n                <div className=\"button-line\">\n                    <RaisedButton type=\"submit\" label=\"Create New Account\" primary />\n                </div>\n\n                <CardText>Already have an account? <Link to={'/login'}>Log in</Link></CardText>\n            </form>\n        </Card>\n);\n\nSignUpForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired\n};\n\nexport default SignUpForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SignUpForm from '../components/SignUpForm.js';\nimport API from '../Utils/APIs';\n\nclass SignUpPage extends React.Component {\n    // set the initial component state\n    state = {\n        errors: {},\n        user: {\n            email: '',\n            name: '',\n            password: ''\n        }\n    }\n\n    /**\n     * Process the form.\n     *\n     * @param {object} event - the JavaScript event object\n     */\n    processForm = event => {\n        // prevent default action. in this case, action is the form submission event\n        event.preventDefault();\n\n        // create a string for an HTTP body message\n        const { name, email, password } = this.state.user;\n\n        //const formData = `email=${email}&password=${password}`;\n        API.signUp({ name, email, password }).then(res => {\n            // change the component-container state\n            // set a message\n            localStorage.setItem('successMessage', res.data.message);\n\n            // redirect user after sign up to login page\n            this.props.history.push('/login');\n            this.setState({\n                errors: {}\n            });\n\n        }).catch(({ response }) => {\n\n            const errors = response.data.errors ? response.data.errors : {};\n            errors.summary = response.data.message;\n\n            this.setState({\n                errors\n            });\n        });\n    }\n\n    /**\n     * Change the user object.\n     *\n     * @param {object} event - the JavaScript event object\n     */\n    changeUser = event => {\n        const field = event.target.name;\n        const user = this.state.user;\n        user[field] = event.target.value;\n\n        this.setState({\n            user\n        });\n    }\n\n    /**\n     * Render the component.\n     */\n    render() {\n        return (\n            <SignUpForm\n                onSubmit={this.processForm}\n                onChange={this.changeUser}\n                errors={this.state.errors}\n                user={this.state.user}\n            />\n        );\n    }\n}\n\nSignUpPage.contextTypes = {\n    router: PropTypes.object.isRequired\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'semantic-ui-react';\nimport '../css/dashboard.css';\n\nconst Dashboard = ({ secretData, user }) => (\n  <Card color='blue' className=\"ui centered card\">\n    <Card.Content>\n      <Card.Header>Dashboard</Card.Header>\n      <Card.Description>Page access granted ONLY after authentication.</Card.Description>\n      {secretData && <Card.Meta style={{ fontSize: '16px', color: 'green' }}>Welcome <strong>{user.name}</strong>!<br />{secretData}</Card.Meta>}\n    </Card.Content>\n  </Card>\n);\n  \nDashboard.propTypes = {\n  secretData: PropTypes.string.isRequired\n};\n\nexport default Dashboard;","import React from 'react';\nimport API from '../Utils/APIs';\nimport Auth from '../Utils/Auth';\nimport Dashboard from '../components/Dashboard.js';\n\n\nclass DashboardPage extends React.Component {\n  state = {\n    secretData: '',\n    user: {}\n  }\n\n  /**\n   * This method will be executed after initial rendering.\n   */\n  componentDidMount() {\n    API.dashboard(Auth.getToken())\n    .then(res => {\n      this.setState({\n          secretData: res.data.message,\n          user: res.data.user\n        });\n    })\n  }\n\n  /**\n   * Render the component.\n   */\n  render() {\n    return (<Dashboard secretData={this.state.secretData} user={this.state.user} />);\n  }\n}\n\nexport default DashboardPage;\n","import React from \"react\";\n\nconst Input = (props) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.newAdult} className=\"form-label\">\n        {props.title}\n      </label>\n      <input \n        id={props.id}\n        name={props.name}\n        input={props.input}\n        value={props.value}\n        onChange={props.handleChange}\n        placeholder={props.placeholder}\n        ></input>\n    </div>\n  );\n};\n\nexport default Input;","import React from \"react\";\n\nconst Select = props => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name}> {props.title} </label>\n      <select className=\"form-control\"\n        id={props.id}\n        name={props.name}\n        \n        onChange={props.handleChange}\n      >\n        <option value= \" \" disabled> {props.placeholder} </option>\n          \n        \n        {props.options.map(option => {\n          return (\n            <option \n            key={option} \n            value={option} \n            label={option}\n            > \n            {option} \n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\n\nconst Button = props => {\n  // console.log(props.style);\n  return (\n    <button style={props.style}\n      className={props.type === \"primary\" ? \"btn btn-primary\" : \"btn btn-secondary\"}\n      onClick={ (e)=>props.action(e)}\n    >\n      {props.title}\n    </button>\n  );\n};\n\nexport default Button;","import React, { Component } from \"react\";\nimport API from '../Utils/APIs'\nimport Auth from '../Utils/Auth';\nimport { Form } from 'semantic-ui-react';\n// import * as $ from 'axios';\nimport '../css/AdultContainer.css';\n\n/* Import Components */\nimport Input from \"../components/Input\";\nimport Select from \"../components/Select\";\nimport Button from \"../components/Button\";\n\nclass AdultContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newAdult: {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                phoneNumber: \"\",\n                relationship: [],\n            },\n\n            relationshipOptions: [\"Parent\", \"Grandparent\", \"Relative\", \"Caregiver\"]\n        };\n\n        this.handleFirstName = this.handleFirstName.bind(this);\n        this.handleLastName = this.handleLastName.bind(this);\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handlePhoneNumber = this.handlePhoneNumber.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleClearForm = this.handleClearForm.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleFirstName(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        this.setState(\n            prevState => ({\n                newAdult: {\n                    ...prevState.newAdult,\n                    firstName: value\n                }\n            }),\n            () => console.log(this.state.newAdult)\n        );\n    };\n\n    handleLastName(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        this.setState(\n            prevState => ({\n                newAdult: {\n                    ...prevState.newAdult,\n                    lastName: value\n                }\n            }),\n        );\n    }\n\n    handleEmail(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        this.setState(\n            prevState => ({\n                newAdult: {\n                    ...prevState.newAdult,\n                    email: value\n                }\n            }),\n        );\n    }\n\n    handlePhoneNumber(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        this.setState(\n            prevState => ({\n                newAdult: {\n                    ...prevState.newAdult,\n                    phoneNumber: value\n                }\n            }),\n        );\n    }\n\n    handleInput(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        let child = event.target.child;\n        this.setState(\n            prevState => ({\n                newAdult: {\n                    ...prevState.newAdult,\n                    [child]: value\n                }\n            }),\n        );\n    }\n\n    // handleFormSubmit(event) {\n    //     event.preventDefault();\n    //     let adultData = this.state.newAdult;\n    //     const self = this;\n    //     $.post('/api/adult', adultData)\n    //     .then(res => {\n    //         self.props.toggleChild(res.data._id);\n    //     })\n    // }\n\n    handleFormSubmit(event) {\n        event.preventDefault();\n        console.log(localStorage.getItem('userId'), \"this should be user id\");\n        const token = Auth.getToken();\n        let adultData = this.state.newAdult;\n        adultData.user = localStorage.getItem('userId');\n        const self = this;\n        API.adult(token, adultData)\n            .then(res => {\n                self.props.toggleChild(res.data._id);\n            })\n    }\n\n    handleClearForm(event) {\n        event.preventDefault();\n        this.setState({\n            newAdult: {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                phoneNumber: \"\",\n                relationship: []\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <Form onSubmit={this.handleFormSubmit}>\n\n                    <Form.Group inline>\n                        <Input\n                            type={\"text\"}\n                            firstname={\"First Name\"}\n                            value={this.state.newAdult.firstName}\n                            placeholder={\"Enter First Name\"}\n                            handleChange={this.handleFirstName}\n                        />{\"\"}\n                        {/* End newAdult firstName Field*/}\n                        <Input\n                            type={\"text\"}\n                            lastName={\"Last Name\"}\n                            value={this.state.newAdult.lastName}\n                            placeholder={\"Enter Last Name\"}\n                            handleChange={this.handleLastName}\n                        />{\"\"}\n                        {/* End newAdult lastName Field*/}\n                    {/* </Form.Group> */}\n\n                    {/* <Form.Group inline> */}\n                        <Input\n                            type={\"text\"}\n                            email={\"Email\"}\n                            value={this.state.newAdult.email}\n                            placeholder={\"Enter Valid Email\"}\n                            handleChange={this.handleEmail}\n                        />{\"\"}\n                        {/* End newAdult email Field*/}\n                        <Input\n                            type={\"text\"}\n                            phoneNumber={\"Phone\"}\n                            value={this.state.newAdult.phoneNumber}\n                            placeholder={\"Enter Phone Number\"}\n                            handleChange={this.handlePhoneNumber}\n                        />{\"\"}\n                        {/* End newAdult email Field*/}\n                    </Form.Group>\n\n                    <Form.Group inline>\n                        \n                        <div className=\"selection\">\n                            <Select\n                                title={\"Relationship\"}\n                                name={\"Relationship to Enrolled Child(ren)\"}\n                                options={this.state.relationshipOptions}\n                                value={this.state.newAdult.children}\n                                placeholder={\"Select Relationship\"}\n                                handleChange={this.handleInput}\n                            />\n                            {/* End Child Relationship Selection Field */}\n                        </div>\n                    </Form.Group>\n\n                    <Form.Group className=\"field-buttons\">\n                        <div className=\"submit\">\n                            <Button\n                                action={this.handleFormSubmit}\n                                type={\"primary\"}\n                                title={\"Submit\"}\n                                style={buttonStyle}\n                            />\n                            {/* End newAdult Submit */}\n                        </div>\n                        <div className=\"clear\">\n                            <Button\n                                action={this.handleClearForm}\n                                type={\"secondary\"}\n                                title={\"Clear\"}\n                                style={buttonStyle}\n                            />\n                            {/* End newAdult Clear Form */}\n                        </div>\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst buttonStyle = {\n    margin: \"10px 10px 10px 10px\"\n};\n\nexport default AdultContainer;","import React from \"react\";\n\nconst SelectTeacher = props => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name}> {props.title} </label>\n      <select \n        className=\"form-control\"\n        id={props.id}\n        name={props.name}\n        onChange={props.handleChange}\n        onClick={props.handleClick}\n      >\n        <option value= \" \" disabled> {props.placeholder} </option>\n          \n        \n        {props.options.map(option => {\n          return (\n            <option \n           \n            key={option.fullName} \n            value={option._id} \n            label={option.fullName}\n            > \n            \n            {option.fullName} \n            \n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default SelectTeacher;\n\n//add the onClick that calls props of the teacher selection.\n//in child container to handle click\n//conditional rendering\n//ternary\n\n","import React, { Component } from \"react\";\nimport Auth from '../Utils/Auth';\nimport * as $ from 'axios';\nimport './ChildContainer.css';\n\n/* Import Components */\nimport Input from \"../components/Input\";\nimport SelectTeacher from \"../components/SelectTeacher\";\nimport Button from \"../components/Button\";\n\nclass ChildContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newChild: {\n                firstName: \"\",\n                lastName: \"\",\n                // grade:\n                teacher: \"\",\n                parent: this.props.adultId\n            },\n            parentOptions: [],\n\n            newTeacher: {\n                fullName: \"\",\n                grade: \"\"\n            },\n            teacherOptions: [],\n        };\n\n        this.handleFirstName = this.handleFirstName.bind(this);\n        this.handleLastName = this.handleLastName.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleClearForm = this.handleClearForm.bind(this);\n        this.handleTeacherInput = this.handleTeacherInput.bind(this);\n    }\n\n    handleFirstName(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        this.setState(\n            prevState => ({\n                newChild: {\n                    ...prevState.newChild,\n                    firstName: value\n                }\n            }),\n            () => console.log(this.state.newChild)\n        );\n    };\n\n    handleLastName(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        this.setState(\n            prevState => ({\n                newChild: {\n                    ...prevState.newChild,\n                    lastName: value\n                }\n            }),\n        );\n    }\n\n    handleTeacherInput(event) {\n        let value = event.target.value;\n        console.log(value, \"I think this should be the teacher\")\n        this.setState(\n            prevState => ({\n                newChild: {\n                    ...prevState.newChild,\n                    teacher: value\n                }\n            }),\n        );\n    }\n\n    handleFormSubmit(event) {\n        event.preventDefault();\n        const token = Auth.getToken();\n        let childData = this.state.newChild;\n        console.log(childData);\n        $.post('/api/child', childData, { headers: { Authorization: `bearer ${token}` } })\n            // $.post('/api/child', childData)\n            .then(res => {\n                // trying to prompt confirmation msg to user on submit\n                this.setState({ childData: res.data})\n                console.log(res);\n                console.log(res.data);\n            })\n    }\n\n    componentDidMount() {\n        const token = Auth.getToken();\n        $.get('/api/teacher', { headers: { Authorization: `bearer ${token}` } })\n            .then(res => {\n                this.setState({\n                    teacherOptions: res.data\n                })\n            })\n    }\n\n    handleClearForm(event) {\n        event.preventDefault();\n        this.setState({\n            newChild: {\n                firstName: \"\",\n                lastName: \"\",\n                teacher: \"\",\n                parent: \"\"\n            },\n            newTeacher: {\n                fullName: \"\",\n                grade: \"\"\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container-wrapper\">\n                <form onSubmit={this.handleFormSubmit}>\n                    <Input\n                        type={\"text\"}\n                        firstname={\"First Name\"}\n                        value={this.state.newChild.firstName}\n                        placeholder={\"Enter First Name\"}\n                        handleChange={this.handleFirstName}\n                    />{\"\"}\n                    {/* End newChild firstName Field*/}\n                    <Input\n                        type={\"text\"}\n                        lastName={\"Last Name\"}\n                        value={this.state.newChild.lastName}\n                        placeholder={\"Enter Last Name\"}\n                        handleChange={this.handleLastName}\n                    />{\"\"}\n                    {/* End newChild lastName Field*/}\n                    <div className=\"selection\">\n                        <SelectTeacher\n                            title={\"Teacher\"}\n                            name={\"Teacher\"}\n                            options={this.state.teacherOptions}\n                            value={this.state.newChild.teacher}\n                            placeholder={\"Select Teacher\"}\n                            handleChange={this.handleTeacherInput}\n                        />{\"\"}\n                        {/* End Teacher Selection Field */}\n                    </div>\n                    <div className=\"submit\">\n                        <Button\n                            action={this.handleFormSubmit}\n                            type={\"primary\"}\n                            title={\"Submit\"}\n                            style={buttonStyle}\n                        />{\"\"}\n                        {/* End newChild Submit */}\n                    </div>\n                    <div className=\"clear\">\n                        <Button\n                            action={this.handleClearForm}\n                            type={\"secondary\"}\n                            title={\"Clear\"}\n                            style={buttonStyle}\n                        />{\"\"}\n                        {/* End newChild Clear Form */}\n                    </div>\n                </form>\n                {this.state && this.state.childData && \n                <div>{'Details entered successfully'}</div>\n                }\n            </div>\n        );\n    \n    }\n}\n\nconst buttonStyle = {\n    margin: \"10px 10px 10px 10px\"\n};\n\n\nexport default ChildContainer;\n","import React from 'react';\nimport Auth from '../../Utils/Auth';\nimport API from '../../Utils/APIs'\n// import * as $ from 'axios';\nimport AdultContainer from '../../containers/AdultContainer.js';\nimport ChildContainer from '../../containers/ChildContainer.js';\n\n// import UserProfile from './UserProfile';\n// import UserDetails from './UserDetails';\n// import RaisedButton from 'material-ui/RaisedButton';\n// import AccountHolder from './AccountHolder';\n\n/*=== Component: UserContainer / Get route, show loading/errors, pass data down===*/\n/*=== Component: UserList: Search for active user and render data to User===*/\n/*=== Component: User: render user data with Add/Delete options. ===*/\n\n/*=== Create Get route for User Data ===*/\n\n/*=== Get User Data from API ===*/\n\n/*=== Code to List User Data in a method or inside render ===*/\n\n/*=== Logic to set active user in state ===*/\n\n\n// const loggedinUser = (id) => (\n//     this.setState({ loggedinUser: this.state.user.find( user => user.is === id)})\n// );\n\nclass MyDetails extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            user: [],\n            // isLoggedIn: false\n        }\n    }\n\n    // accountHolder = (e) => {\n    //     e.preventDefault();\n    //     console.log(localStorage.getItem('userId'), \"this should be user id\");\n    //     const token = Auth.getToken();\n    //     let userData = this.state.loggedinUser;\n    //     userData.user = localStorage.getItem('userId');\n\n    //     const loggedIn = this;\n    //     API.user(token, userData)\n    //         .then(res => {\n    //             loggedIn.props.toggleChild(res.data._id);\n    //             console.log(res.data);\n    //         })\n    // }\n\n    /*=== Get User Data from API ===*/\n    ComponentDidMount() {\n        const userData = Auth.getUser();\n        const token = Auth.getToken();\n\n        // let userData = this.state.isLoggedInUser;\n        // userData.user = localStorage.getItem('userId');\n        \n        // $.get('/api/user', user, { headers: { Authorization: `bearer ${token}` } })\n        API.user(token, userData)\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    isLoggedIn: true,\n                    user: json,\n                })\n                // console.log(res);\n                // console.log(res.data);\n            });\n    }\n\n    render() {\n        const { isLoggedIn, user } = this.state;\n\n        if (!isLoggedIn) {\n            // return <div>{user.name} {user.email}</div>\n        }\n        // const accountHolder = this.state.userData.map (userData =>  <div>{userData.name}, {userData.email}</div>)\n        return (\n            \n            <div>\n                <div>\n                    <ul>\n                        {user.map(user =>\n                            <li key={user.id}>\n                            Name: {user.name} | Email: {user.email}\n                            </li>\n                        )}\n                    </ul>\n                </div>\n                <div>\n                    {/* {userData.map((userData, userId) => {\n                        return \n                        <div>\n                            <h1>{userData.name}</h1>\n                            <h1>{userData.email}</h1>\n                        </div>\n                    })} */}\n                       \n                </div>\n                <div>\n                    <h1>Volunteers</h1>\n                    <AdultContainer />\n                    <button>Add New Volunteer</button>\n                    <button>Delete Volunteer</button>\n                </div>\n\n                <div>\n                    <h1>Child(ren)</h1>\n                    <ChildContainer />\n                    <button>Add New Volunteer</button>\n                    <button>Delete Volunteer</button>\n                </div>\n            </div >    \n        );\n    }\n}\n\nexport default MyDetails;","import React from 'react';\nimport { Form, Input } from 'semantic-ui-react'\n\n\nconst MyEvents = (props) => (\n    <div>\n        <h3>Upcoming Events</h3>\n        <Form>\n            <Form.Group widths='equal'>\n                <Form.Field\n                    id='form-input-control-event-name'\n                    control={Input}\n                    label='Event Name'\n                    placeholder='Event Name'\n                />\n                <Form.Field\n                    id='form-input-control-event-date'\n                    control={Input}\n                    label='Event Date'\n                    placeholder='Event Date'\n                />\n                <Form.Field\n                    id='form-input-control-event-time'\n                    control={Input}\n                    label='Event Time'\n                    placeholder='Event Time'\n                />\n                <Form.Field\n                    id='form-input-control-child-name'\n                    control={Input}\n                    label='Child Name'\n                    placeholder='Child Name'\n                />\n            </Form.Group>\n\n            \n            <Form.Group widths='equal'>\n                <Form.Field\n                    id='form-input-control-event-name'\n                    control={Input}\n                    label='Event Name'\n                    placeholder='Event Name'\n                />\n                <Form.Field\n                    id='form-input-control-event-date'\n                    control={Input}\n                    label='Event Date'\n                    placeholder='Event Date'\n                />\n                <Form.Field\n                    id='form-input-control-event-time'\n                    control={Input}\n                    label='Event Time'\n                    placeholder='Event Time'\n                />\n                <Form.Field\n                    id='form-input-control-child-name'\n                    control={Input}\n                    label='Child Name'\n                    placeholder='Child Name'\n                />\n            </Form.Group>\n        </Form>\n        \n\n        <h3>Past Events</h3>\n        <Form>\n            <Form.Group widths='equal'>\n                <Form.Field\n                    id='form-input-control-event-name'\n                    control={Input}\n                    label='Event Name'\n                    placeholder='Event Name'\n                />\n                <Form.Field\n                    id='form-input-control-event-date'\n                    control={Input}\n                    label='Event Date'\n                    placeholder='Event Date'\n                />\n                <Form.Field\n                    id='form-input-control-event-time'\n                    control={Input}\n                    label='Event Time'\n                    placeholder='Event Time'\n                />\n                <Form.Field\n                    id='form-input-control-child-name'\n                    control={Input}\n                    label='Child Name'\n                    placeholder='Child Name'\n                />\n            </Form.Group>\n\n            \n            <Form.Group widths='equal'>\n                <Form.Field\n                    id='form-input-control-event-name'\n                    control={Input}\n                    label='Event Name'\n                    placeholder='Event Name'\n                />\n                <Form.Field\n                    id='form-input-control-event-date'\n                    control={Input}\n                    label='Event Date'\n                    placeholder='Event Date'\n                />\n                <Form.Field\n                    id='form-input-control-event-time'\n                    control={Input}\n                    label='Event Time'\n                    placeholder='Event Time'\n                />\n                <Form.Field\n                    id='form-input-control-child-name'\n                    control={Input}\n                    label='Child Name'\n                    placeholder='Child Name'\n                />\n            </Form.Group>\n        </Form>\n    </div>\n)\n\nexport default MyEvents; ","import React from 'react';\nimport { Tab } from 'semantic-ui-react'\n\n// const panes = [\n//   { menuItem: 'My Details', render: () => <Tab.Pane> Content</Tab.Pane> },\n//   { menuItem: 'My Events', render: () => <Tab.Pane>Content</Tab.Pane> },\n//   { menuItem: 'My Groups', render: () => <Tab.Pane>Content</Tab.Pane> },\n//   { menuItem: 'Organizer View', render: () => <Tab.Pane>Content</Tab.Pane> },\n//   { menuItem: 'Archived Events', render: () => <Tab.Pane>Content</Tab.Pane> },\n// ]\n\nconst Tabs = (props) => <Tab \npanes={props.tabList.map(el => ({ menuItem: el.tabName, render: () => <Tab.Pane> <el.Component/></Tab.Pane> })) }\ndefaultActiveIndex={0} />\n\n\n// class Tabs extends Component {\n//   state = { activeIndex: 1 }\n\n//   handleRangeChange = e => this.setState({ activeIndex: e.target.value })\n//   handleTabChange = (e, { activeIndex }) => this.setState({ activeIndex })\n\n//   render() {\n//     const { activeIndex } = this.state\n\n//     return (\n//       <div>\n//         {/* <div>activeIndex: {activeIndex}</div> */}\n//         {/* <input type='range' max='2' value={activeIndex} onChange={this.handleRangeChange} /> */}\n//         <Tab panes={panes} \n//         activeIndex={activeIndex} \n//         onTabChange={this.handleTabChange} />\n//       </div>\n//     )\n//   }\n// }\n\nexport default Tabs;","import React, { Component } from 'react';\nimport MyDetails from './MyDetails';\nimport MyEvents from './MyEvents';\n// import MyGroups from './MyGroups';\n// import Archived from './Archived';\nimport Tabs from '../../components/Tabs';\n\n\nclass MyAccount extends Component {\n\n    state = {\n        // showChild: false,\n        tabList: [\n            {tabName: 'My Details', \n            Component: MyDetails},\n            {tabName: 'My Events', \n            Component: MyEvents},\n            // {tabName: 'My Groups'},\n            // {tabName: 'Organizer View'},\n            // {tabName: 'Archived Events'}\n        ]\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Tabs tabList={this.state.tabList}/>\n            </div>\n        )\n    }\n}\n\n\nexport default MyAccount;","import React from 'react';\n\nconst NewEvent = (props) => (\n    <div>\n        <div>\n            <input placeholder=\"EVENT TITLE\" /> < br />\n            <input placeholder=\"EVENT DESCRIPTION\" />\n        </div>\n        <br />\n        <div>\n            <input placeholder=\"EVENT DETAILS\" />\n        </div>\n    </div>\n)\n              \nexport default NewEvent; ","import React, { Component } from 'react';\n\n/* IMPORT COMPONENTS */\nimport NewEvent from './NewEvent';\nimport Tabs from '../../components/Tabs';\n\nclass Events extends Component {\n\n    state = {\n        tabList: [\n            {tabName: 'Events Under Construction', Component: NewEvent},\n            // {tabName: 'Event 2'},\n            // {tabName: 'Event 3'},\n            // {tabName: 'Event 4'},\n            // {tabName: 'Event 5'}\n        ]\n    }\n    render() {\n        return (\n            <div>\n                <Tabs tabList={this.state.tabList}/>\n                {/* <h1>Events Section Under Construction</h1> */}\n            </div>\n        )\n    }\n}\n\nexport default Events;","import React, { Component } from 'react';\nimport AdultContainer from '../containers/AdultContainer'\nimport ChildContainer from '../containers/ChildContainer'\n// import './home.css';\n\nclass Volunteers extends Component {\n    state = {\n        showChild: false\n    }\n\n    toggleChild = (adultId) => {\n        this.setState(\n            { showChild: true, adultId: adultId }\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                 <h1>Adult Volunteer</h1>\n                <AdultContainer toggleChild={this.toggleChild}></AdultContainer>\n\n                <h1>Child of Volunteer</h1>\n                {this.state.showChild &&\n                    <ChildContainer adultId={this.state.adultId}></ChildContainer>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Volunteers;","import React, { Component } from 'react';\nimport * as $ from 'axios';\n\n// const Suggestions = (props) => {\n//     const options = props.results.map(r => (\n//         <li key={r.id}>\n//             {r.name}\n//         </li>\n//     ))\n//     return <ul>{options}</ul>\n// }\n    \n\nclass Search extends Component {\n\n    state = {\n        query: '', \n    }\n\n    handleInputchange = () => {\n        this.setState({\n            query: this.search.value\n        }, () => {\n            // if (this.state.query && this.state.query.length > 1) {\n            //     if (this.state.query.length % 2 === 0) {\n            //         this.getInfo()\n            //     }\n            // }\n        })\n    } \n\n    getInfo = () => {\n        $.get('/api/teacher' )\n        // {this.state.query}\n        .then(({ data }) => {\n            this.setState({\n                results: data.data\n            })\n        })\n    }\n\n\n    render() {\n        return (\n            <form>\n                <input\n                    placeholder=\"Search for volunteers...\"\n                    ref={input => this.search = input}\n                    onChange={this.handleInputChange}\n                />\n                {/* <Suggestions results={this.state.results} /> */}\n                \n                \n                <h1>Search Page Under Construction</h1>\n                \n            </form>\n        )\n    }\n}\n\n\nexport default Search;","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n/*== UI THEMES ==*/\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// import injectTapEventPlugin from 'react-tap-event-plugin';\n\n/*== AUTHENTICATION / ROUTES ==*/\nimport Auth from './Utils/Auth';\nimport { PrivateRoute, PropsRoute, LoggedOutRoute } from './components/Routes';\n\n/*== HEADERS ==*/\nimport Header from './components/Header/Header';\nimport DropDownHeader from './components/Header/DropDownHeader';\n\n/*== PAGES ==*/\nimport HomePage from './Pages/HomePage';\nimport LoginPage from './Pages/LoginPage.js';\nimport LogoutFunction from './Pages/LogoutFunction.js';\nimport SignUpPage from './Pages/SignUpPage.js';\nimport DashboardPage from './Pages/DashboardPage.js';\nimport MyAccount from './Pages/MyAccount/MyAccount';\nimport Events from './Pages/Events/Events';\nimport Volunteers from './Pages/Volunteers.js';\nimport Search from './Pages/Search.js';\n\n/*== STYLING ==*/\nimport '../src/css/App.css';\n\n// remove tap delay, essential for MaterialUI to work properly\n// injectTapEventPlugin();\n\nclass App extends Component {\n\n  state = {\n    authenticated: false\n  }\n\n  componentDidMount() {\n    // check if user is logged in on refresh\n    this.toggleAuthenticateStatus()\n  }\n\n  toggleAuthenticateStatus = () => {\n    // check authenticated status and toggle state based on that\n    this.setState({ authenticated: Auth.isUserAuthenticated() })\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider muiTheme={getMuiTheme()}>\n        <Router>\n          <div>\n            <Header />\n            <DropDownHeader />\n            \n            <PropsRoute exact path=\"/\" component={HomePage} toggleAuthenticateStatus={this.toggleAuthenticateStatus} />\n            <PrivateRoute path=\"/dashboard\" component={DashboardPage} />\n            <LoggedOutRoute path=\"/login\" component={LoginPage} toggleAuthenticateStatus={this.toggleAuthenticateStatus} />\n            <LoggedOutRoute path=\"/signup\" component={SignUpPage} />\n            \n            <PrivateRoute path=\"/myaccount\" component={MyAccount} />\n            <PrivateRoute path=\"/volunteers\" component={Volunteers} />\n            <PrivateRoute path=\"/events\" component={Events} />\n            <PrivateRoute path=\"/search\" component={Search} />\n            <PrivateRoute path=\"/logout\" component={LogoutFunction} />\n\n            {/* <Route path=\"/myaccount\" component={MyAccount} />\n            <Route path=\"/volunteers\" component={Volunteers} />\n            <Route path=\"/events\" component={Events} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/logout\" component={LogoutFunction} /> */}\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}