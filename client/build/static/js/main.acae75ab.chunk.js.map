{"version":3,"sources":["assets/whitelogo.png","components/Input.js","components/Select.js","components/Button.js","containers/AdultContainer.js","components/SelectTeacher.js","containers/ChildContainer.js","Pages/MyDetails/MyDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Input","props","react_default","a","createElement","className","htmlFor","newAdult","title","id","name","input","value","onChange","handleChange","placeholder","Select","disabled","options","map","option","key","label","Button","style","type","onClick","e","action","AdultContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","firstName","lastName","email","phoneNumber","children","childrenOptions","handleFirstName","bind","assertThisInitialized","handleLastName","handleEmail","handlePhoneNumber","handleFormSubmit","handleClearForm","handleInput","event","_this2","preventDefault","target","setState","prevState","objectSpread","console","log","child","defineProperty","adultData","self","$","then","res","data","toggleChild","_id","onSubmit","components_Input","firstname","components_Select","components_Button","buttonStyle","Component","margin","SelectTeacher","handleClick","fullName","ChildContainer","newChild","teacher","parent","adultId","parentOptions","newTeacher","grade","teacherOptions","handleTeacherInput","childData","_this3","components_SelectTeacher","MyDetails","showChild","containers_AdultContainer","containers_ChildContainer","Header","src","logo","alt","Dashboard","Events","Home","App","BrowserRouter","App_Header","Link","to","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.acae75ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whitelogo.5512d7e6.png\";","import React from \"react\";\n\nconst Input = (props) => {\n  //console.log(props.value);\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.newAdult} className=\"form-label\">\n        {props.title}\n      </label>\n      <input \n        id={props.id}\n        // firstname={props.firstname}\n        // lastname={props.lastName}\n        // email={props.email}\n        // phonenumber={props.phonenumber}\n        name={props.name}\n        input={props.input}\n        value={props.value}\n        onChange={props.handleChange}\n        placeholder={props.placeholder}\n        ></input>\n    </div>\n  );\n};\n\nexport default Input;","import React from \"react\";\n\nconst Select = props => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name}> {props.title} </label>\n      <select className=\"form-control\"\n        id={props.id}\n        name={props.name}\n        \n        onChange={props.handleChange}\n      >\n        <option value= \" \" disabled> {props.placeholder} </option>\n          \n        \n        {props.options.map(option => {\n          return (\n            <option \n            key={option} \n            value={option} \n            label={option}\n            > \n            {option} \n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\n\nconst Button = props => {\n  // console.log(props.style);\n  return (\n    <button style={props.style}\n      className={props.type === \"primary\" ? \"btn btn-primary\" : \"btn btn-secondary\"}\n      onClick={ (e)=>props.action(e)}\n    >\n      {props.title}\n    </button>\n  );\n};\n\nexport default Button;","import React, { Component } from \"react\";\nimport * as $ from 'axios';\n\n/* Import Components */\nimport Input from \"../components/Input\";\nimport Select from \"../components/Select\";\nimport Button from \"../components/Button\";\n\nclass AdultContainer extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            newAdult: {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                phoneNumber: \"\",\n                children: []\n            },\n\n            childrenOptions: [\"Parent\", \"Grandparent\", \"Relative\", \"Caregiver\"]\n        };\n\n        this.handleFirstName = this.handleFirstName.bind(this);\n        this.handleLastName = this.handleLastName.bind(this);\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handlePhoneNumber = this.handlePhoneNumber.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleClearForm = this.handleClearForm.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleFirstName(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        this.setState(\n            prevState => ({\n                newAdult: {\n                    ...prevState.newAdult,\n                    firstName: value\n                }\n            }),\n            () => console.log(this.state.newAdult)\n        );\n    };\n    \n    handleLastName(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        this.setState(\n            prevState => ({\n                newAdult: {\n                    ...prevState.newAdult,\n                    lastName: value\n                }\n            }),\n        );\n    }\n\n    handleEmail(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        this.setState(\n            prevState => ({\n                newAdult: {\n                    ...prevState.newAdult,\n                    email: value\n                }\n            }),\n        );\n    }\n\n    handlePhoneNumber(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        this.setState(\n            prevState => ({\n                newAdult: {\n                    ...prevState.newAdult,\n                    phoneNumber: value\n                }\n            }),\n        );\n    }\n\n    handleInput(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        let child = event.target.child;\n        this.setState(\n            prevState => ({\n                newAdult: {\n                    ...prevState.newAdult,\n                    [child]: value\n                }\n            }),\n        );\n    }\n\n    handleFormSubmit(event) {\n        event.preventDefault();\n        let adultData = this.state.newAdult;\n        console.log(adultData);\n        const self = this;\n        $.post('/api/adult', adultData)\n        .then(res => {\n            console.log(res);\n            console.log(res.data);\n            self.props.toggleChild(res.data._id);\n        })\n        \n    }\n\n    handleClearForm(event) {\n        event.preventDefault();\n        this.setState({\n          newAdult: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            phoneNumber: \"\",\n            children: []\n          }\n        });\n    }\n    \n    render () {\n        return (\n            <form onSubmit={this.handleFormSubmit} >\n                <Input\n                    type={\"text\"}\n                    firstname={\"First Name\"}\n                    value={this.state.newAdult.firstName}\n                    placeholder={\"Enter First Name\"}\n                    handleChange={this.handleFirstName}\n                />{\"\"}\n                {/* End newAdult firstName Field*/}\n                <Input\n                    type={\"text\"}\n                    lastName={\"Lastt Name\"}\n                    value={this.state.newAdult.lastName}\n                    placeholder={\"Enter Last Name\"}\n                    handleChange={this.handleLastName}\n                />{\"\"}\n                {/* End newAdult lastName Field*/}\n                <Input\n                    type={\"text\"}\n                    email={\"Email\"}\n                    value={this.state.newAdult.email}\n                    placeholder={\"Enter Valid Email\"}\n                    handleChange={this.handleEmail}\n                />{\"\"}\n                {/* End newAdult email Field*/}\n                <Input\n                    type={\"text\"}\n                    phoneNumber={\"Phone\"}\n                    value={this.state.newAdult.phoneNumber}\n                    placeholder={\"Enter Phone Number\"}\n                    handleChange={this.handlePhoneNumber}\n                />{\"\"}\n                {/* End newAdult email Field*/}\n            \n                <Select\n                    title={\"Children\"}\n                    name={\"Relationship to Enrolled Child(ren)\"}\n                    options={this.state.childrenOptions}\n                    value={this.state.newAdult.children}\n                    placeholder={\"Select Relationship\"}\n                    handleChange={this.handleInput}\n                    />\n                {/* End Child Relationship Selection Field */}\n                <Button\n                    action={this.handleFormSubmit}\n                    type={\"primary\"}\n                    title={\"Submit\"}\n                    style={buttonStyle}\n                />\n                {/* End newAdult Submit */}\n                <Button\n                    action={this.handleClearForm}\n                    type={\"secondary\"}\n                    title={\"Clear\"}\n                    style={buttonStyle}\n                />\n                {/* End newAdult Clear Form */}\n                \n            \n            </form> \n        );\n    }\n}\n//Conditional rendering.  Once Adult record submitted, the option to add a child appears. \n//Show child property on state, defualt to false\n\nconst buttonStyle = {\n    margin: \"10px 10px 10px 10px\"\n};\n\nexport default AdultContainer;","import React from \"react\";\n\nconst SelectTeacher = props => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name}> {props.title} </label>\n      <select \n        className=\"form-control\"\n        id={props.id}\n        name={props.name}\n        onChange={props.handleChange}\n        onClick={props.handleClick}\n      >\n        <option value= \" \" disabled> {props.placeholder} </option>\n          \n        \n        {props.options.map(option => {\n          return (\n            <option \n           \n            key={option.fullName} \n            value={option._id} \n            label={option.fullName}\n            > \n            \n            {option.fullName} \n            \n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default SelectTeacher;\n\n//add the onClick that calls props of the teacher selection.\n//in child container to handle click\n//conditional rendering\n//ternary\n\n","import React, { Component } from \"react\";\nimport * as $ from 'axios';\n\n/* Import Components */\nimport Input from \"../components/Input\";\n// import Select from \"../components/Select\";\nimport SelectTeacher from \"../components/SelectTeacher\";\nimport Button from \"../components/Button\";\n\nclass ChildContainer extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            newChild: {\n                firstName: \"\",\n                lastName: \"\",\n                // grade:\n                teacher: \"\",\n                parent: this.props.adultId\n            },\n            parentOptions: [],\n\n            newTeacher: {\n                fullName: \"\",\n                grade: \"\"\n            },\n            teacherOptions: [],\n        };\n\n        this.handleFirstName = this.handleFirstName.bind(this);\n        this.handleLastName = this.handleLastName.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleClearForm = this.handleClearForm.bind(this);\n        this.handleTeacherInput = this.handleTeacherInput.bind(this);\n    }\n\n    handleFirstName(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        this.setState(\n            prevState => ({\n                newChild: {\n                    ...prevState.newChild,\n                    firstName: value\n                }\n            }),\n            () => console.log(this.state.newChild)\n        );\n    };\n\n    handleLastName(event) {\n        event.preventDefault();\n        let value = event.target.value;\n        this.setState(\n            prevState => ({\n                newChild: {\n                    ...prevState.newChild,\n                    lastName: value\n                }\n            }),\n        );\n    }\n\n    handleTeacherInput(event) {\n        let value = event.target.value;\n        console.log(value, \"I think this should be the teacher\")\n        this.setState(\n            prevState => ({\n                newChild: {\n                    ...prevState.newChild,\n                    teacher: value\n                }\n            }),\n        );\n    }\n\n    handleFormSubmit(event) {\n        event.preventDefault();\n        let childData = this.state.newChild;\n        console.log(childData);\n    \n        $.post('/api/child', childData)\n        .then(res => {\n            console.log(res);\n            console.log(res.data);\n        })\n    }\n    //associate teacher with child\n    //function onclick teacher option, determine seleted teacher\n    //filtering logic, store in variable and send in post request\n\n    componentDidMount () {\n        $.get('/api/teacher')\n        .then(res => {\n            this.setState({\n                teacherOptions: res.data\n            })\n        })\n    }\n\n    handleClearForm(event) {\n        event.preventDefault();\n        this.setState({\n          newChild: {\n            firstName: \"\",\n            lastName: \"\",\n            teacher: \"\",\n            parent: \"\"\n          },\n          newTeacher: {\n              fullName: \"\",\n              grade: \"\"\n          }\n        });\n    }\n\n    render () {\n        return (\n            <form onSubmit={this.handleFormSubmit}>\n                <Input\n                    type={\"text\"}\n                    firstname={\"First Name\"}\n                    value={this.state.newChild.firstName}\n                    placeholder={\"Enter First Name\"}\n                    handleChange={this.handleFirstName}\n                    />{\"\"}\n                {/* End newChild firstName Field*/}\n                <Input\n                    type={\"text\"}\n                    lastName={\"Last Name\"}\n                    value={this.state.newChild.lastName}\n                    placeholder={\"Enter Last Name\"}\n                    handleChange={this.handleLastName}\n                    />{\"\"}\n                {/* End newChild lastName Field*/}\n                <SelectTeacher\n                    title={\"Teacher\"}\n                    name={\"Teacher\"}\n                    options={this.state.teacherOptions}\n                    value={this.state.newChild.teacher}\n                    placeholder={\"Select Teacher\"}\n                    handleChange={this.handleTeacherInput}\n                    />{\"\"}\n                {/* End Teacher Selection Field */}\n                <Button\n                    action={this.handleFormSubmit}\n                    type={\"primary\"}\n                    title={\"Submit\"}\n                    style={buttonStyle}\n                    />{\"\"}\n                {/* End newChild Submit */}\n                <Button\n                    action={this.handleClearForm}\n                    type={\"secondary\"}\n                    title={\"Clear\"}\n                    style={buttonStyle}\n                    />{\"\"}\n                {/* End newChild Clear Form */}\n            </form>\n        );\n    }\n} \n\nconst buttonStyle = {\n    margin: \"10px 10px 10px 10px\"\n};\n\n\nexport default ChildContainer;\n        ","import React, { Component } from 'react';\nimport AdultContainer from '../../containers/AdultContainer.js';\nimport ChildContainer from '../../containers/ChildContainer.js';\n\n\n\nclass MyDetails extends Component {\n\n    state = {\n        showChild: false\n    }\n\n\n    toggleChild = (adultId) => {\n        this.setState(\n            { showChild: true, adultId: adultId }\n        )\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h1>Adult Volunteer</h1>\n                <AdultContainer toggleChild={this.toggleChild}></AdultContainer>\n\n                <h1>Child of Volunteer</h1>\n                {this.state.showChild &&\n                    <ChildContainer adultId={this.state.adultId}></ChildContainer>\n                }\n            </div>\n        )\n    }\n}\n\n\nexport default MyDetails;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport logo from './assets/whitelogo.png';\nimport MyDetails from './Pages/MyDetails/MyDetails'\n\n// import Header from './components/Header/Header';\n\nimport './App.css';\n\nconst Header = (props) => (\n  <div className=\"header\">\n      <img src={logo} alt=\"whitelogo\" className=\"logo\"></img>\n  </div>\n);\n\n\nconst Dashboard = () => <h2>Dashboard</h2>\n// const MyDetails = () => <h2>My Details</h2>\nconst Events = () => <h2>Events</h2>\nconst Home = () => <h2>Home</h2>\n\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Header />\n          <nav>\n            <li>\n              <Link to=\"/\">Dashboard</Link>\n            </li>\n            <li>\n              <Link to=\"/mydetails/\">My Details</Link>\n            </li>\n            <li>\n              <Link to=\"/events/\">Events</Link>\n            </li>\n            <li>\n              <Link to=\"/home/\">Home</Link>\n            </li>\n          </nav>\n\n          <Route path=\"/\" exact component={Dashboard} />\n          <Route path=\"/mydetails/\" exact component={MyDetails} />\n          <Route path=\"/events/\" exact component={Events} />\n          <Route path=\"/home/\" exact component={Home} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n//browser router\n//switch function\n//create component for home route","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}